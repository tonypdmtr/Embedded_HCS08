;*******************************************************************************
; Project  : DeviceInitialization
; Processor: MC9S08QG8CPB
; Version  : Component 01.262, Driver 01.08, CPU db: 3.00.013
; Datasheet: MC9S08QG8 Rev. 4 2/2008
; Date/Time: 2014-01-23, 13:22, # CodeGen: 0
; Abstract : This module contains device initialization code
;          : for selected on-chip peripherals.
; Contents : Function "MCU_init" initializes selected peripherals
; Copyright: 1997 - 2012 Freescale, Inc. All Rights Reserved.
; http     : www.freescale.com
; mail     : support@freescale.com
; This code was generated by the Device Initialization Tool
;*******************************************************************************

;*******************************************************************************
; Method      :  MCU_init (component MC9S08QG8_16)
; Description :
; Device initialization code for selected peripherals.

MCU_init            proc                          ; ### MC9S08QG8_16 "Cpu" init code ...
          ;-------------------------------------- ; Common initialization of the write once registers
                    lda       #$52                ; SOPT1: COPE=0,COPT=1,STOPE=0,BKGDPE=1,RSTPE=0
                    sta       SOPT1

                    lda       #$1C                ; SPMSC1: LVDF=0,LVDACK=0,LVDIE=0,LVDRE=1,LVDSE=1,LVDE=1,BGBE=0
                    sta       SPMSC1

                    clra                          ; SPMSC2: PDF=0,PPDF=0,PPDACK=0,PDC=0,PPDC=0
                    sta       SPMSC2

                    lda       SPMSC3
                    and       #$CF                ; SPMSC3: LVDV=0,LVWV=0
                    sta       SPMSC3
          ;-------------------------------------- ; System clock initialization
                    lda       $FFAF
                    cbeqa     #$FF,SkipTrim@@     ; Test if the device trim value is stored on the specified address

                    lda       $FFAF               ; ICSTRM: Initialize internal clock trim from a non volatile memory
                    sta       ICSTRM

                    lda       $FFAE               ; ICSSC: Initialize internal clock trim from a non volatile memory
                    sta       ICSSC
SkipTrim@@
                    mov       #$04,ICSC1          ; ICSC1: CLKS=0,RDIV=0,IREFS=1,IRCLKEN=0,IREFSTEN=0
                    mov       #$40,ICSC2          ; ICSC2: BDIV=1,RANGE=0,HGO=0,LP=0,EREFS=0,ERCLKEN=0,EREFSTEN=0
          ;-------------------------------------- ; Common initialization of the CPU registers
                    lda       PTASE
                    ora       #$1F                ; PTASE: PTASE4=1,PTASE3=1,PTASE2=1,PTASE1=1,PTASE0=1
                    sta       PTASE

                    lda       #$FF                ; PTBSE: PTBSE7=1,PTBSE6=1,PTBSE5=1,PTBSE4=1,PTBSE3=1,PTBSE2=1,PTBSE1=1,PTBSE0=1
                    sta       PTBSE

                    clra                          ; PTADS: PTADS5=0,PTADS4=0,PTADS3=0,PTADS2=0,PTADS1=0,PTADS0=0
                    sta       PTADS

                    clra                          ; PTBDS: PTBDS7=0,PTBDS6=0,PTBDS5=0,PTBDS4=0,PTBDS3=0,PTBDS2=0,PTBDS1=0,PTBDS0=0
                    sta       PTBDS
          ;-------------------------------------- ; Init_TPM init code
                    clr       TPMSC               ; Stop and reset counter TPMSC: TOF=0,TOIE=0,CPWMS=0,CLKSB=0,CLKSA=0,PS2=0,PS1=0,PS0=0
                    clrhx
                    sthx      TPMMOD              ; Period value setting
                    lda       TPMSC               ; Overflow int. flag clearing (first part)
                                                  ; TPMSC: TOF=0,TOIE=1,CPWMS=0,CLKSB=0,CLKSA=1,PS2=1,PS1=0,PS0=1
                    mov       #$48,TPMSC          ; Int. flag clearing (2nd part) and timer control register setting
          ;--------------------------------------
                    cli                           ; Enable interrupts
                    rts

;*******************************************************************************
; Interrupt handler : LED_Flash_Handler
; Description :
;     User interrupt service routine.

LED_Handler         proc
          ;-------------------------------------- ; Toggles the heartbeat LED
                    dbnz      heartbeat,Cont@@    ; skips if appropriate delay has not happened
                    jsr       HeartBeat_LED       ; Toggles the LED
          ;-------------------------------------- ; End heartbeat toggling
                    jsr       Scan_Keypad         ; Scans the keypad

                    lda       #60                 ; Reloads heartbeat with 60
Cont@@              sta       heartbeat

                    lda       TPMSC               ; Overflow int. flag clearing (first part)
                                                  ; TPMSC: TOF=0,TOIE=1,CPWMS=0,CLKSB=0,CLKSA=1,PS2=1,PS1=0,PS0=1
                    mov       #$48,TPMSC          ; Int. flag clearing (2nd part) and timer control register setting
AnRTI               rti

;*******************************************************************************
                    @vector   Vrti                ; Vrti (at FFD0) Unassigned
                    @vector   Vacmp               ; Vacmp (at FFD6) Unassigned
                    @vector   Vadc                ; Vadc (at FFD8) Unassigned
                    @vector   Vkeyboard           ; Vkeyboard (at FFDA) Unassigned
                    @vector   Viic                ; Viic (at FFDC) Unassigned
                    @vector   Vscitx              ; Vscitx (at FFDE) Unassigned
                    @vector   Vscirx              ; Vscirx (at FFE0) Unassigned
                    @vector   Vscierr             ; Vscierr (at FFE2) Unassigned
                    @vector   Vspi                ; Vspi (at FFE4) Unassigned
                    @vector   Vmtim               ; Vmtim (at FFE6) Unassigned
                    @vector   Vtpmovf,LED_Handler ; Vtpmovf (at FFF0) Used
                    @vector   Vtpmch1             ; Vtpmch1 (at FFF2) Unassigned
                    @vector   Vtpmch0             ; Vtpmch0 (at FFF4) Unassigned
                    @vector   Vlvd                ; Vlvd (at FFF8) Unassigned
                    @vector   Virq                ; Virq (at FFFA) Unassigned
                    @vector   Vswi                ; Vswi (at FFFC) Unassigned
                    @vector   Vreset,Start        ; Vreset (at FFFE) Reset vector
;*******************************************************************************
